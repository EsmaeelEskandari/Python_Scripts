Aux_Functions.py:
	This module holds a lot of the clutter that would inhibit the readability
	of the other scripts. It contains lists used for histogram titles, datset
	names, etc... It also has the Atlas Style built in and a few other functions
	referenced by the other scripts. Anytime new datasets or histograms are
	added to the analysis they need to be added to the lists in here...

	Credit for the pyROOT implementation of the Atlas Style goes to ghl3 at
	https://github.com/ghl3/RooPlottingSuite/

Batch_Aida2Root.py:
	This script is deprecated, but could still be useful. It converts all off the
	aida files in a directory to root files then uses hadd (from ROOT) to merge
	the root files and add the histograms together. It then divides the histograms
	by the number of input root files to get an average. This method is slow
	and I haven't tested to to be sure the errors are handled properly

CompileRootFiles.py:
	This script grabs the root files generated by 'MergeAidaFiles.py' and compiles
	them all into a single root file called 'VBF_Systematics.root'. The directory
	names in the output root file are given in a list in the Aux_Functions.py
	module. It looks for the input root files in directories whose names are
	given in a list in Aux_Functions.py module. This script also uses pyAMI to
	get the cross-sections for the respective dataset and creates a directory
	of histograms normalized to the given cross-section. Finally it creates a
	directory for histograms normalized to their area (1/hist.Integrate('width')).
	Finally, each histogram is properly titled, as are their axes. These titles
	are defined in the Aux_Functions.py module.

Create_Hists.py:
	This script plots the signal and background for a given histogram using the
	histograms normalized to the cross-section. The input file is 'VBF_Systematics.
	root' from 'CompileRootFiles.py'. It uses the Atlas Style class in
	Aux_Functions.py to make the histograms presentable and it adjusts the 
	hist line options (width,color,...) using SetHistStyle() defined in Aux...
	This histograms are saved as pdfs in a folder named 'Plot_Comparisons'.

Find_Error_Band.py:
	

MergeAidaFiles.py:
	

plot_all_hists.py:
